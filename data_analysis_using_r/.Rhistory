aggregate(x = iris[, -c(5)], by = list(iris[,iris$Species == "virginica"]), FUN = median)
aggregate(x = iris[, -c(5)], by = list(iris$Species == "virginica"), FUN = median)
aggregate(x = iris[, -c(5)], by = list(iris$Species), FUN = median)
aggregate(subset(x = iris, Species == "virginica"), by = list(iris$Species), FUN = median)
subset(x = iris, Species == "virginica")
aggregate(subset(x = iris, Species == "virginica")[,c(-5)],
by = list(iris$Species), FUN = median)
subset(x = iris, Species == "virginica")
subset(x = iris, Species == "virginica")
describeBy(x = iris[, -c(5)], group = iris$Species)
describeBy(x = subset(x = iris, Species == "virginica")[, -c(5)],
group = iris$Species)
describeBy(x = iris[, -c(5)], group = iris$Species)
subset(x = iris, Species == "virginica")[, -c(5)]
describeBy(x = subset(x = iris, Species == "virginica"),
group = iris$Species)
describeBy(x = subset(x = iris),
group = iris$Species)
describeBy(x = subset(x = iris),
group = iris$Species == "virginica")
describeBy(x = subset(x = iris),
group = iris$Species)
describeBy(x = iris,
group = iris$Species)
describeBy(x = iris,
group = iris$Species)
aggregate(Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width ,
median)
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
iris, meidan)
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
iris, median)
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species == "virginica",
iris, median)
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
iris, median)
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
iris, median)
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
subset(iris, Species == "virginica"), median)
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
subset(iris, Species == "virginica"), median)
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
subset(iris, Species == "virginica"), median)
sort(aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
subset(iris, Species == "virginica"), median))
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
subset(iris, Species == "virginica"), median)
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
subset(iris, Species == "virginica"), median, sort(median))
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
subset(iris, Species == "virginica"), median, sort)
aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species,
subset(iris, Species == "virginica"), median)
my_vector <- c(1, NA, 2, NA, 3, NA, 4, NA)
na.omit(my_vector)
na.omit(my_vector, mean)
na.omit(my_vector, mean)
?replace
my_vector
is.na(my_vector)
mean(my_vector)
mean(my_vector, na.rm = T)
fixed_vector <- replace(my_vector, my_vector[is.na], mean(my_vector, na.rm = T))
fixed_vector <- replace(my_vector, list = my_vector[is.na],
mean(my_vector, na.rm = T))
my_vector[is.na]
my_vector <- c(1, NA, 2, NA, 3, NA, 4, NA)
my_vector[is.na]
my_vector[is.na(my_vector)]
fixed_vector <- replace(my_vector, my_vector[is.na(my_vector)],
mean(my_vector, na.rm = T))
is.na(my_vector)
fixed_vector <- replace(my_vector, is.na(my_vector),
mean(my_vector, na.rm = T))
my_vector <- c(1, NA, 2, NA, 3, NA, 4, NA)
fixed_vector <- replace(my_vector, is.na(my_vector),
mean(my_vector, na.rm = T))
fixed_vector
hist(df$mpg)
hist(df$mpg, breaks = breaks = 20)
hist(df$mpg, breaks = 20)
hist(df$mpg, breaks = 20, xlab = "MPG")
boxplot(mpg~am, df)
plot(df$mpg, df$hp)
ggplot(df, aes(x = mpg)) + geom_histogram()
ggplot(df, aes(x = mpg))
ggplot(df, aes(x = mpg)) + geom_abline()
ggplot(df, aes(x = mpg)) + geom_histogram()
ggplot(df, aes(x = mpg))+
geom_histogram(fill = "white", col = "black")
ggplot(df, aes(x = mpg))+
geom_histogram(fill = "white", col = "black", binwidth = 4)
ggplot(df, aes(x = mpg))+
geom_histogram(fill = "white", col = "black", binwidth = 4)
ggplot(df, aes(x = mpg))+
geom_histogram(fill = "white", col = "black", binwidth = 2)
ggplot(df, aes(x = mpg))+
geom_dotplot()
ggplot(df, aes(x = mpg))+
geom_density(fill = "blue")
ggplot(df, aes(x = mpg))+
geom_density(fill = "orange")
ggplot(df, aes(x = mpg))+
geom_density(fill = "green")
ggplot(df, aes(x = mpg))+
geom_density(fill = "grey")
ggplot(df, aes(x = mpg))+
geom_density(fill = "blue")
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot()
ggplot(df, aes(x = mpg, fill = am))+
geom_density()
ggplot(df, aes(x = mpg, fill = am))+
geom_density(alpha(0.2))
ggplot(df, aes(x = mpg, fill = am))+
geom_density(alpha = 0.2)
ggplot(df, aes(x = mpg, fill = am))+
geom_density(alpha = 0.5)
ggplot(df, aes(x = am, y = hp))+
geom_boxplot()
ggplot(df, aes(x = am, y = hp, col = vs))+
geom_boxplot()
ggplot(df, aes(x = mpg, y = hp))+
geom_point()
ggplot(df, aes(x = mpg, y = hp))+
geom_point(size = 6)
ggplot(df, aes(x = mpg, y = hp, col = vs))+
geom_point(size = 6)
ggplot(df, aes(x = mpg, y = hp, col = vs, size = qsec))+
geom_point(size = 6)
ggplot(df, aes(x = mpg, y = hp, col = vs, size = qsec))+
geom_point(size = 6)
View(df)
ggplot(df, aes(x = mpg, y = hp, col = vs, size = qsec))+
geom_point()
View(airquality)
ggplot(airquality, aes(x = Month, y = Ozone))+
geom_boxplot()
ggplot(airquality, aes(x = Month, y = Ozone))+
geom_boxplot(size = 2)
ggplot(airquality, aes(x = Month, y = Ozone))+
geom_boxplot(size = 3)
ggplot(airquality, aes(x = Month, y = Ozone))+
geom_boxplot(size = 0.2)
ggplot(airquality, aes(x = as.factor(Month), y = Ozone))+
geom_boxplot()
ggplot(airquality, aes(x = as.factor(Month), y = Ozone))
ggplot(airquality, aes(x = as.factor(Month), y = Ozone))+
geom_boxplot()
ggplot(mtcars, aes(x = mpg, y = disp))+
geom_dotplot()
ggplot(mtcars, aes(x = mpg, y = disp))+
geom_dotplot()
ggplot(mtcars, aes(x = mpg, y = disp))+
geom_point()
ggplot(mtcars, aes(x = mpg, y = disp))+
geom_point(col = hp)
ggplot(mtcars, aes(x = mpg, y = disp))+
geom_point(col = hp)
ggplot(mtcars, aes(x = mpg, y = disp, col = hp))+
geom_point()
ggplot(aes(Sepal.Length, Sepal.Width, col = Species)) +
geom_point(iris, size = Petal.Length)
ggplot(iris,aes(Sepal.Length, Sepal.Width, col = Species)) +
geom_point(iris, size = Petal.Length)
ggplot(iris,aes(Sepal.Length, Sepal.Width, col = Species)) +
geom_point(size = Petal.Length)
View(iris)
ggplot(iris, aes(Sepal.Length, Sepal.Width, col = Species,size = Petal.Length)) +
geom_point()
ggplot(iris, aes(Sepal.Length, Sepal.Width, fill = Species,size = Petal.Length)) +
geom_point()
ggplot(iris, aes(Sepal.Length, Sepal.Width, col = Species,size = Petal.Length)) +
geom_point()
ggplot(iris, aes(Sepal.Length, Sepal.Width, col = Species,size = Petal.Length)) +
geom_dotplot()
ggplot(iris, aes(Sepal.Length, Sepal.Width, col = Species,size = Petal.Length)) +
geom_point()
View(grants)
View("grants")
View("grants")
df <- read.csv("grants.csv")
View(df)
str(df)
df$status <- as.factor(df$status)
str(df)
str(df)
levels(df$status) <- c("Not funded", "Funded")
str(df)
t1 <- table(df$status)
t1
dim(t1)
# 2d table
t2 <- table(df$status, df$field)
t2
# 2d table
t2 <- table( status = df$status, field = df$field)
t2
prop.table(t2)
prop.table(t2, 1)
prop.table(t2, 2)
t3 <- table(Years = df$years_in_uni, status = df$status, field = df$field)
t3
t3 <- table(Years = df$years_in_uni, field = df$field, status = df$status)
t3
t3
dimnames(HairEyeColor)
HairEyeColor[ , ,'Male']
prop.table(HairEyeColor[,, 'Male'], )
prop.table(HairEyeColor[,, 'Male'], 2)
prop.table(HairEyeColor[,, 'Male'], 2)[3,2]
HairEyeColor[ , ,'Female']
HairEyeColor[ , ,'Female'][,4]
sum(HairEyeColor[ , ,'Female'][,4])
t1
barplot(t1)
t2
barplot(t2)
t3
t3
barplot(t2, legend.text = T, args.legend = list(x = "topright"))
barplot(t2, legend.text = T, args.legend = list(x = "topleft"))
barplot(t2, legend.text = T, args.legend = list(x = "bottomleft"))
barplot(t2, legend.text = T, args.legend = list(x = "bottomright"))
barplot(t2, legend.text = T, args.legend = list(x = "topright"))
barplot(t2, legend.text = T, args.legend = list(x = "topright"), beside = T)
barplot(t2, legend.text = T, args.legend = list(x = "topright"), beside = F)
barplot(t2, legend.text = T, args.legend = list(x = "topright"), beside = T)
barplot(t2, legend.text = T, args.legend = list(x = "topright"), beside = F)
barplot(t2, legend.text = T, args.legend = list(x = "topright"), beside = T)
barplot(t2, legend.text = T, args.legend = list(x = "topright"), beside = F)
barplot(t2, legend.text = T, args.legend = list(x = "topright"), beside = T)
mosaicplot(t2)
mydata <- as.data.frame(HairEyeColor)
View(mydata)
mydata[mydata$Sex == "Female"]
mydata[,mydata$Sex == "Female"]
mydata[mydata$Sex == "Female",]
as.data.frame(mydata[mydata$Sex == "Female",])
mydata <- mydata[mydata$Sex == "Female",]
View(mydata)
barplot(mydata)
barplot(mydata$Sex)
library(ggplot2)
ggplot(data = mydata, aes(x = Hair, y = Freq, col = Eye)) +
geom_bar(stat="identity") +
scale_fill_manual(values=c("Brown", "Blue", "Darkgrey", "Darkgreen"))
ggplot(data = mydata, aes(x = Hair, y = Freq, col = Eye)) +
geom_bar(stat="identity", position = position_stack(reverse = TRUE)) +
scale_fill_manual(values=c("Brown", "Blue", "Darkgrey", "Darkgreen"))
ggplot(data = mydata, aes(x = Hair, y = Freq, col = Eye)) +
geom_bar(stat="identity", position = "stack") +
scale_fill_manual(values=c("Brown", "Blue", "Darkgrey", "Darkgreen"))
ggplot(data = mydata, aes(x = Hair, y = Freq, col = Eye)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("Brown", "Blue", "Darkgrey", "Darkgreen"))
ggplot(data = mydata, aes(x = Hair, y = Freq, fill = Eye)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("Brown", "Blue", "Darkgrey", "Darkgreen"))
binom.test(x = 5, n = 20, p = 0.5)
binom.test(x = 10, n = 20, p = 0.5)
binom.test(x = 9, n = 20, p = 0.5)
binom.test(x = 7, n = 20, p = 0.5)
binom.test(x = 5, n = 20, p = 0.5)
t1
binom.test(t1)
binom.test(x = 5, n = 20, p = 0.5)
binom.test(x = 10, n = 20, p = 0.5)
binom.test(x = 6, n = 20, p = 0.5)
binom.test(x = 5, n = 20, p = 0.5)
binom.test(t1)
binom.test(t1)
# h0 - нет статистически значимых различий
# h1 - есть статистически значимые различия
binom.test(x = 5, n = 20, p = 0.5)
# h0 - нет статистически значимых различий
# h1 - есть статистически значимые различия
plot(binom.test(x = 5, n = 20, p = 0.5))
# h0 - нет статистически значимых различий
# h1 - есть статистически значимые различия
binom.test(x = 5, n = 20, p = 0.5)
plot(binom.test(t1))
ggplot(binom.test(t1))
ggplot(binom.test(t1))
binom.test(t1)
t1
t1
t1
t1
t1
binom.test(t1)
chisq.test(t1)
typeof(chisq.test(t1))
class(chisq.test(t1))
class(chisq.test(t1))
typeof(chisq.test(t1))
chi <- chisq.test(t1)
View(chi)
chi$expected
chi$observed
t2
chisq.test(t2)
chisq.test(t2, p = 0.9)
chisq.test(t2, p = 0.9)
chisq.test(t2, p = 0.1)
chisq.test(t2)
t2
# Fisher's Exact test
fisher.test(t2)
View(HairEyeColor)
?subset
subset(HairEyeColor, Sex = 'Female', Hair = 'Brown')
subset(HairEyeColor, Sex = 'Female', Hair = 'Brown', select = 'Freq')
subset(HairEyeColor, Sex = Female)
subset(HairEyeColor, Sex = Female, select = Freq)
subset(HairEyeColor)
subset(HairEyeColor, subset = c('Eye', 'Freq'))
subset(HairEyeColor, Sex = Female)
subset(HairEyeColor, Sex = 'Female')
subset(airquality, Temp > 80, select = c(Ozone, Temp))
str(HairEyeColor)
typeof(HairEyeColor)
class(HairEyeColor)
test <- as.data.frame(HairEyeColor)
str(test)
subset(test, Sex = Female)
subset(test, Sex = Female, Hair = Brown)
subset(test, Sex = Female, Hair = Brown)
subset(test, Hair = Brown)
subset(test, Hair = Brown)
subset(test, Hair = Brown)
subset(test, Hair = 'Brown')
subset(test, Hair == 'Brown')
subset(test, Sex == Female, Hair == 'Brown')
subset(test, Sex == 'Female', Hair == 'Brown')
subset(test, Sex == 'Female', Hair == 'Brown')
subset(test, Sex == 'Female')
subset(test, Sex == 'Male')
subset(test, Sex == 'Female')
subset(test, Sex == 'Female', Hair = 'Brown')
subset(test, Sex == 'Female', Hair == 'Brown')
subset(test, select = c(Sex == 'Female', Hair == 'Brown'))
subset(test, select = list(Sex == 'Female', Hair == 'Brown'))
subset(test, Sex == 'Female')
subset(test, Hair == 'Female')
subset(test, Hair == 'Brown')
subset(test, Hair == 'Brown' & Sex == 'Female')
test <- subset(test, Hair == 'Brown' & Sex == 'Female')
test
chisq.test((test))
chisq.test(test)
test <- subset(HairEyeColor, Hair == 'Brown' & Sex == 'Female')
View(HairEyeColor)
test <- subset(HairEyeColor, Hair == 'Brown' & Sex == 'Female')
test <- as.data.frame(HairEyeColor)
test <- subset(HairEyeColor, Hair == 'Brown' & Sex == 'Female')
test <- as.data.frame(HairEyeColor)
test <- subset(HairEyeColor, Hair == 'Brown' & Sex == 'Female')
test <- subset(HairEyeColor, Hair == 'Brown' && Sex == 'Female')
test <- as.data.frame(HairEyeColor)
test <- subset(HairEyeColor, Hair == 'Brown' && Sex == 'Female')
str(HairEyeColor)
subset(HairEyeColor, Hair == 'Brown' && Sex == 'Female')
subset(HairEyeColor, Hair == 'Brown' & Sex == 'Female')
test <- as.data.frame(HairEyeColor)
subset(test, Hair == 'Brown' & Sex == 'Female')
as.table(subset(test, Hair == 'Brown' & Sex == 'Female'))
subset(test, Hair == 'Brown' & Sex == 'Female')
?chisq.test
subset(test, Hair == 'Brown' & Sex == 'Female')
chisq.test(test)
test
test <- subset(test, Hair == 'Brown' & Sex == 'Female')
test
?table
t3
test <- table(HairEyeColor, Sex == 'Female')
test <- table(HairEyeColor$Sex == 'Female', HairEyeColor$Hair = 'Brown')
table(HairEyeColor$Sex == 'Female', HairEyeColor$Hair = 'Brown')
table(HairEyeColor$Sex, HairEyeColor$Hair)
table(a = HairEyeColor$Sex, b = HairEyeColor$Hair)
table(HairEyeColor$Sex, HairEyeColor$Hair)
View(HairEyeColor)
HairEyeColor
View(HairEyeColor[2])
HairEyeColor[2]
View(HairEyeColor)
HairEyeColor
test <- as.data.frame(HairEyeColor)
test
test <- subset(test, Sex == "Female", Hair == "Brown")
test
test <- subset(test, Sex == "Female" & Hair == "Brown")
test
test <- as.data.frame(HairEyeColor)
test <- subset(test, Sex == "Female" & Hair == "Brown")
test
table(test)
test
test
table(test)
table(test$Hair, test$Eye, test$Sex)
table(test$Hair, test$Eye, test$Sex, test$Freq)
table(test$Hair, test$Eye, test$Sex, test$Freq)
test
table(test$Sex, test$Hair, test$Eye, , test$Freq)
table(test$Sex, test$Hair, test$Eye, test$Freq)
test
test
table(test$Eye, test$Freq)
table(test$Freq)
t1
t2
test
table(test$Eye)
table(test$Freq, test$Eye)
table(test$Sex, test$Eye)
table(test$Hair, test$Eye)
test
test <- as.data.frame(HairEyeColor)
test
View(test)
test <- subset(test, Sex == "Female" & Hair == "Brown")
test <- as.data.frame(HairEyeColor)
test <- as.data.frame(HairEyeColor)
test <- subset(test, Sex == "Female" & Hair == "Brown")
test
class(test)
typeof(test)
test
table(test$Eye)
test
str(test)
table(test$Eye)
table(test$Freq, test$Eye)
t2
HairEyeColor
HairEyeColor[,,2]
HairEyeColor[,,2]
HairEyeColor[,2]
HairEyeColor[,2]
HairEyeColor
HairEyeColor[,,2]
HairEyeColor[,,2]
HairEyeColor[,,2]
HairEyeColor[,,2]
HairEyeColor[,,"Female"]
HairEyeColor[,,"Female"]
HairEyeColor[,,"Male"]
HairEyeColor[,,"Male"]
HairEyeColor[,,"Female"]
HairEyeColor[,,"Female"]
test <- HairEyeColor[,,"Female"]
test
test[2,]
chisq.test(test[2,])
str(diamonds)
library(ggplot2)
str(diamonds)
type(diamonds)
typeof(diamonds)
View(diamonds)
table(diamonds$cut, diamonds$color)
chisq.test(table(diamonds$cut, diamonds$color))
chisq.test(table(diamonds$cut, diamonds$color))
chisq.test(table(diamonds$cut, diamonds$color))[1]
chisq.test(table(diamonds$cut, diamonds$color))$X
test < -chisq.test(table(diamonds$cut, diamonds$color))
test <- chisq.test(table(diamonds$cut, diamonds$color))
test$statistic
test <- chisq.test(table(diamonds$cut, diamonds$color))$statistic
test
test
chisq.test(table(diamonds$cut, diamonds$color))
?ifelse
factor_price < - ifelse(diamonds$price >= mean(diamonds$price), 1, 0)
factor_price <- ifelse(diamonds$price >= mean(diamonds$price), 1, 0)
factor_price
mean(diamonds$price
mean(diamonds$price)
diamonds$price
factor_price <- ifelse(diamonds$price >= mean(diamonds$price), '1', '0')
factor_price
iamonds$price >= mean(diamonds$price)
diamonds$price >= mean(diamonds$price)
diamonds$price
mean(diamonds$price)
mean(diamonds$price)
factor_carat <- ifelse(diamonds$carat >= mean(diamonds$carat), '1', '0')
factor_carat
factor_price
any(factor_price == '1')
str(factor_price)
chisq.test(factor_price, factor_carat)
chisq.test(factor_price, factor_carat)$statistic
factor_price <- ifelse(diamonds$price >= mean(diamonds$price), 1, 0)
factor_carat <- ifelse(diamonds$carat >= mean(diamonds$carat), 1, 0)
chisq.test(factor_price, factor_carat)$statistic
?fisher.test
fisher.test(mtcars$am, mtcars$vs)
fisher.test(mtcars$am, mtcars$vs)[1]
fisher_test <- fisher.test(mtcars$am, mtcars$vs)[1]
fisher_test <- fisher.test(mtcars$am, mtcars$vs)$p.value
fisher_test
fisher_test <- fisher.test(mtcars$am, mtcars$vs)
str(fisher_test)
typeof(fisher_test)
fisher_test$p.value
fisher_test$p.value
mtcars$am
mtcars$vs
